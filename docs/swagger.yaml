---
openapi: 3.0.2
info:
  title: Report API
  version: '0.1'
servers:
- url: https://apitest.vipps.no
- url: https://api.vipps.no
paths:
  "/ledgers":
    get:
      responses:
        500:
          "$ref": "#/components/responses/500"
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Ledger"
  "/ledgers/{ledgerID}/transactions":
    get:
      parameters:
        - in: path
          required: true
          name: ledgerID
          schema:
            type: string
        - in: query
          required: false
          name: ledgerDate
          schema:
            type: string
            format: Date
            example: 2022-01-20
        - in: query
          required: false
          name: fromLedgerDate
          schema:
            type: string
            format: Date
            example: 2022-01-19
        - in: query
          required: false
          name: toLedgerDate
          schema:
            type: string
            format: Date
            example: 2022-01-22
        - in: query
          required: false
          name: fromTimestamp
          schema: 
            type: string
            format: DateTime
            example: 2022-09-22T08:00:00+00:00
        - in: query
          required: false
          name: toTimestamp
          schema:
            type: string
            format: DateTime
            example: 2022-09-22T10:00:00+00:00
        - in: query
          required: false
          name: inPayout
          schema:
            type: string
            example: 2000010
        - in: query
          required: false
          name: sincePayout
          schema:
            type: string
            example: 2000010
      responses:
        500:
          "$ref": "#/components/responses/500"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                type: object
                properties:
                  transactions:
                    type: array
                    items:
                      "$ref": "#/components/schemas/Transaction"
            text/csv:
              schema:
                type: string
              examples:
                csv table:
                  summary: List of transactions
                  value: |-
                    transactionID, timestamp, ledgerDate, ledgerID, transactionType, orderID, ledgerAmount.value, ledgerAmount.currency, grossAmount.value, grossAmount.currency, fee.value, fee.currency, priceRate, priceFixed.value, priceFixed.currency, storeID, storeName
                    2000001, 2022-09-22T09:31:28+00:00, 2022-09-22, 1, refund, 1, 0, NOK, 0, NOK, 0, NOK, 1.25, 0, NOK, msn/1234, Lokalbutikk Løkka

components:
  responses:
    500:
      description: Server error
      content:
        application/json:
          schema:
            type: object
            properties:
              type:
                type: string
                description: An URI-reference that identities the proble type
              title:
                type: string
                description: A human readable summary of the problem
              instance:
                type: string
                description: Unique ID for the request which can be used to find related events (logs)
    401:
      description: Unauthorized
      content:
        application/json:
          schema:
            type: object
            properties:
              code: 
                type: string
                example: 
              message:
                type: string
  schemas:
    ReportInput: 
      type: object
      properties:
        columns:
          type: array
          items:
            type: string
        filters:
          oneOf:
            - type: object
              required:
                - date
              properties:
                date:
                  type: string
                  format: date
                  example: 2022-01-20
            - type: object
              required:
                - fromDate
                - toDate
              properties:
                fromDate:
                  type: string
                  example: 2022-01-20
                toDate:
                  type: string
                  example: 2022-01-22
            - type: object
              required:
                - fromTime
                - toTime
              properties:
                fromTime:
                  type: string
                  example: 2022-01-20T03:00:00+02
                toTime:
                  type: string
                  example: 2022-01-22T04:00:00+02
            - type: object
              required:
                - inPayout
              properties:
                inPayout:
                  type: string
                  example: 2000010
            - type: object
              required:
                - sincePayout
              properties:
                sincePayout:
                  type: string
                  example: 2000010
    Ledger:
      type: object
      properties:
        ledgerID:
          type: string
          example: '1'
        settlementAccountNumber:
          type: string
          example: "86011117947"
        firstPayout:
          type: string
          nullable: true
          example: 2022-01-20T03:00:00+02
        lastPayout:
          type: string
          nullable: true
          example: 2022-01-22T04:00:00+02 
        org:
          $ref: "#/components/schemas/Organization"
        settlesFor:
          type: array
          items:
            oneOf:
              - $ref: "#/components/schemas/LedgerSettlesForEpayment" 
              - $ref: "#/components/schemas/LedgerSettlesForVippsnummer" 
    LedgerSettlesForEpayment:
      type: object
      properties:
        type:
          type: string
          enum:
            - epayment
        epaymentMSN:
          type: string
    LedgerSettlesForVippsnummer:
      type: object
      properties:
        type:
          type: string
          enum:
            - vippsnummer
        vippsnummer: 
          type: string
        country: 
          type: string
    Transaction:
      type: object
      properties:
        transactionID:
          type: string
          example: '2000001'
        timestamp:
          type: string
          format: DateTime
          example: '2022-09-22T09:31:28+00:00'
        ledgerDate:
          type: string
          format: Date
          example: '2022-09-22'
        ledgerID:
          type: string
          example: '1'
        transactionType:
          type: string
          enum:
            - refund
            - capture
            - invoice
            - payout
        orderID:
          type: string
          description: |-
            Is also called End-To-End-Reference
        ledgerAmount:
          $ref : "#/components/schemas/Money"
          description: |-
            Contribution to the ledger balance.
        grossAmount:
          $ref : "#/components/schemas/Money"
        fee:
          $ref : "#/components/schemas/Money"
        priceRate:
          type: number
          format: double
          example: 1.25
          description: |-
            The percentage rate used.
        priceFixed:
          $ref : "#/components/schemas/Money"
        storeID:
          type: string
          example: msn/1234
          description: |-
            The store id. Can be msn/1234 or vippsnummer/1234.
        storeName:
          type: string
          example: "Lokalbutikk Løkka"
    Organization:
      type: object
      properties:
        orgno:
          type: number
          example: 987654321
        jurisdiction:
          type: string
          enum:
            - "NO"
          example: "NO"
    Money:
      type: object
      properties:
        value:
          type: number
          format: int32
          description: |-
            Amounts are specified in minor units.
            For Norwegian kroner (NOK) that means 1 kr = 100 øre. Example: 499 kr = 49900 øre.
        currency:
          type: string
          example: 'NOK'
          description: |-
            Currency code as defined in ISO 4217